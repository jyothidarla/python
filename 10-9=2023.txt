Bytes data type:
==============
Python supports bytes data type.The main objective of bytes data type
is work on audio,video,semi structure files(XML,json).Byte data type is
a immutable object(State_less object).While working with bytes data type 
range must be from 0 to 256-1=255


Ex1:
===
import time 
L1=[101,102,103,104,105,267,112,113]
res1=bytes(L1)
print(res1)
print()
print(type(res1))
print()
time.sleep(2)
print('End of an application')


OUTPUT:
======
Traceback (most recent call last):
  File "test1.py", line 3, in <module>
    res1=bytes(L1)
ValueError: bytes must be in range(0, 256)


Ex2:
===
import time 
L1=[101,102,103,104,105,255,112,113]
res1=bytes(L1)
print(res1)
print()
print(type(res1))
print()
time.sleep(2)
print('End of an application')


Ex3:
===
import time 
L1=[101,102,103,104,105,255,112,113]
res1=bytes(L1)
print("The result is binary format:",res1)
print()
print("The result in Actaul format:",*res1)
print()
print(type(res1))
print()
time.sleep(2)
print('End of an application')


Ex4:
===
import time 
L1=[101,102,103,104,105,255,112,113]
res1=bytes(L1)
print("The result is binary format:",res1)
print()
for x1 in res1:
    print(x1)
print()
print(type(res1))
print()
time.sleep(2)
print('End of an application')


Ex5:
===
import time 
L1=[101,102,103,104,105,255,112,113]
print('====Before immutable operations====')
res1=bytes(L1)
print(res1)
print()
print(*res1)
print()
print("====After immutable operations====")
res1[0]=111 
res1[1]=112 
print(res1)
print()
print(*res1)
print()
time.sleep(2)
print("End of an application")

OUTPUT:
======
====Before immutable operations====
b'efghi\xffpq'

101 102 103 104 105 255 112 113


bytearray data type:
====================
Python supports bytearray data type.It exactly same as bytes data type.byte
array is mutable object.While working with bytearray data type range must be
0 to 255.


Ex1:
===
import time 
L1=[101,102,103,104,105,255,112,113]
X1=bytearray(L1)
print(X1)
print()
print(type(X1))
print()
time.sleep(2)
print('End of an application')


Ex2:
===
import time 
L1=[101,102,103,104,105,255,112,113]
X1=bytearray(L1)
print(X1)
print()
print(*X1)
print()
print(type(X1))
print()
time.sleep(2)
print('End of an application')


Ex3:
===
import time 
L1=[101,102,103,104,105,255,112,113]
X1=bytearray(L1)
print(X1)
print()
for s1 in X1:
    print(s1)
print()
print(type(X1))
print()
time.sleep(2)
print('End of an application')


Ex4:
===
import time 
L1=[101,102,103,104,105,255,112,113]
print("===Before mutable operations====")
X1=bytearray(L1)
print(X1)
print()
print(*X1)
print()
print("===After mutable operations=====")
X1[0]=10 
X1[1]=20
X1[2]=30 
X1[3]=40 
X1[4]=50
X1[5]=111 
print(X1)
print()
print(*X1)
print()
time.sleep(2)
print('End of an application')


Frozenset data type:
===================
Python supports frozenset.It is exactly same as set data type.But frozenset data type is
immutable object(state_less object).


Ex1:
===
import time 
S1={ord('A'),ord('B'),ord('C'),ord('D'),ord('E')}
S2=frozenset(S1)
print(S2)
print()
print(type(S2))
print()
for S3 in S2:
    print(S3)
print()
time.sleep(2)
print("End of an application")


Ex2:
===
import time 
S1={ord('A'),ord('B'),ord('C'),ord('D'),ord('E')}
S2=frozenset(S1)
print(S2)
print()
print(type(S2))
S2[0]=chr(79)
print(S2)
print()
time.sleep(2)
print("End of an application")

OUTPUT:
======
frozenset({65, 66, 67, 68, 69})

<class 'frozenset'>
Traceback (most recent call last):
  File "test1.py", line 7, in <module>
    S2[0]=chr(79)
TypeError: 'frozenset' object does not support item assignment


What is difference between tuple and frozenset data type?

Ex1:
===
import time 
Tuple_1=(101,102,103,104,105,106,107,101,102,103,104)
print("====Using Tuple data type====")
print(Tuple_1)
print()
print(type(Tuple_1))
print()
Set_1={101,102,103,104,105,106,107,101,102,103,104}
X1=frozenset(Set_1)
print("====Using frozenset data type====")
print(X1)
print()
print(type(X1))
print()
time.sleep(2)
print('End of an application')


OUTPUT:
======
C:\Users\Admin\Desktop>Python test1.py
====Using Tuple data type====
(101, 102, 103, 104, 105, 106, 107, 101, 102, 103, 104)

<class 'tuple'>

====Using frozenset data type====
frozenset({101, 102, 103, 104, 105, 106, 107})

<class 'frozenset'>

End of an application


Range data type:
===============
Python supports range data type.The main objective of range data type
is generate the sequence of integer values.Following is the syntax for
range data type.

for x1 in range(begin,end(end-1),step):
     ---

Form_1:
======
for s1 in range(end(end-1)):
      ----
for s1 in range(10):
     ---


Ex1:
===
import time 
for s1 in range(10):
    print(s1)
print()
time.sleep(2)
print('End of an application')


Ex2:
===
import time 
for s1 in range(10):
    print("IHUB is a best platform for freshers")
print()
time.sleep(2)
print('End of an application')


Ex3:
===
import time 
for s1 in range(10):
    print("*")
print()
time.sleep(2)
print('End of an application')


Form_2:
======
for s2 in range(begin,end(end-1):
     ----

Ex1:
===
import time 
for s2 in range(5,25):
    print(s2)
print()
time.sleep(2)
print("End of an application")



Ex2:
===
import time 
for s2 in range(5,25):
    print('s2')
print()
time.sleep(2)
print("End of an application")


Form_3:
======
for s3 in range(begin,end(end-1),step):
    ----

Ex1:
===
import time 
for s3 in range(2,10,1):
    print(s3)
print()
time.sleep(2)
print('End of an application')


Ex2:
===
import time 
for s1 in range(0,10,2):
    print("Even numbers are:",s1)
print()
for s2 in range(1,10,2):
    print("Odd numbers are:",s2)
print()
time.sleep(2)
print('End of an application')



Ex3:
====
import time 
for x1 in range(True):
    print(x1,"---","Welcome to IHUB for IT courses")
print()
time.sleep(2)
print('End of an application')


Ex4:
===
import time 
for x1 in range(False):
    print(x1,"---","Welcome to IHUB for IT courses")
print()
time.sleep(2)
print('End of an application')


Ex5:
===
import time 
for x1 in range(1,7,-1):
    print(x1,"---","Welcome to IHUB for IT courses")
print()
time.sleep(2)
print('End of an application')


Ex6:
===
import time 
for x1 in range("IHUB"):
    print(x1)
print()
time.sleep(2)
print('End of an application')

Ex7:
===
import time 
for x1 in range(123.56):
    print(x1)
print()
time.sleep(2)
print('End of an application')

Ex8:
===
import time 
for x1 in "ABCD":
    print(x1)
print()
time.sleep(2)
print('End of an application')
























